# -*- coding: utf-8 -*-
"""modification_SIR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18JuVy7fSGwCXjdDHLcm2Dk0RQOy5Nr14
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp

# Parameter model
alpha = 0.02  # Angka kelahiran
sigma = 0.01  # Angka kematian alami
beta = 0.3    # Tingkat penularan
gamma = 0.1   # Tingkat pemulihan
N = 1000      # Total populasi

# Kondisi awal
S0 = 990      # Jumlah awal susceptible
I0 = 10       # Jumlah awal infected
R0 = 0        # Jumlah awal recovered
y0 = [S0, I0, R0]

# Rentang waktu simulasi
t_span = (0, 200)
t_eval = np.linspace(0, 200, 1000)

# Definisi persamaan diferensial
def SIR_model(t, y):
    S, I, R = y
    dSdt = alpha * N - (beta * S * I) / N - sigma * S
    dIdt = (beta * S * I) / N - gamma * I - sigma * I
    dRdt = gamma * I - sigma * R
    return [dSdt, dIdt, dRdt]

# Solusi numerik
sol = solve_ivp(SIR_model, t_span, y0, t_eval=t_eval)

# Plot hasil
plt.figure(figsize=(10, 6))
plt.plot(sol.t, sol.y[0], label='Susceptible (S)')
plt.plot(sol.t, sol.y[1], label='Infected (I)')
plt.plot(sol.t, sol.y[2], label='Recovered (R)')
plt.xlabel('Waktu (hari)')
plt.ylabel('Jumlah Individu')
plt.title('Model SIR dengan Pengaruh Kelahiran dan Kematian')
plt.legend()
plt.grid()
plt.show()